datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

// -------------------------------------------

// enum Role {
//   USER
//   ADMIN
// }

enum ChatRole {
  USER
  SYSTEM
}

// model User {
//   id  String @id 
//   role Role   @default(USER)
//   lawyer Lawyer[]
// }

model Category {
  id     String   @id @default(uuid())
  name   String
  lawyer Lawyer[]

}

// model Message {
//   id        String   @id @default(uuid())
//   role      ChatRole
//   content   String   @db.Text
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   lawyer    Lawyer   @relation(fields: [lawyerId], references: [id], onDelete: Cascade)
//   lawyerId  String 

//   @@index([lawyerId])
// }

model Message {
  id          String   @id @default(uuid())
  role        ChatRole   
  content     String   @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  companionId String
  userId      String

  companion   Lawyer @relation(fields: [companionId], references: [id], onDelete: Cascade)
  
  @@index([companionId])
}

// model Lawyer {
//   id          String    @id @default(uuid())
//   description String
//   instruction String    @db.Text
//   seed        String    @db.Text
//   createdAt   DateTime  @default(now())
//   updatedAt   DateTime  @updatedAt
//   category    Category  @relation(fields: [categoryId], references: [id])
//   categoryId  String
//   user        User      @relation(fields: [userId], references: [id])
//   userId      String
//   messages    Message[]

//   @@index([categoryId])
//   @@index([userId])
// }

model Lawyer {
  id            String @id @default(uuid())
  userId        String
  userName      String
  name          String @db.Text
  description   String
  instructions  String @db.Text
  seed          String @db.Text

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  category      Category @relation(fields: [categoryId], references: [id])
  categoryId    String

  messages      Message[]

  @@index([categoryId])
}




// npm i -D  prisma
// npx prisma init
// npx prisma generate
// npx prisma db push
// npx prisma studio
